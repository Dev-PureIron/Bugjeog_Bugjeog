<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bugjeogbugjeog.app.bugjeogbugjeog.mapper.BusinessBoardMapper">
<!--  관리자 페이지 목록 불러오기  -->
    <select id="selectAllBusinessBoard" resultType="boardBusinessDTO">
        select 	board_business_id, b.business_id, business_email, business_password, business_ceo_name, business_number, business_company_name,
                business_phone_number, business_establishment_date, business_register_date, business_status,
                business_img_original_name, business_img_uuid, business_img_path, business_location, business_category,
                board_business_title, board_business_content, board_business_register_date, board_business_update_date, board_business_status
        from tbl_business b join tbl_board_business bb on b.business_id = bb.business_id
        order by bb.board_business_id desc
        limit #{adminCriteria.offset}, #{adminCriteria.rowCount}
    </select>

<!-- pr게시판 게시물 개수  -->
    <select id="selectBoardCount" resultType="_int">
        select 	count(board_business_id)
        from tbl_business b join tbl_board_business bb on b.business_id = bb.business_id
    </select>

<!-- 관리자 페이지 상세보기 -->
    <select id="selectBoard" resultType="boardBusinessDTO">
        select board_business_id, b.business_id, business_email, business_password, business_ceo_name, business_number, business_company_name,
		business_phone_number, business_establishment_date, business_register_date, business_status,
		business_img_original_name, business_img_uuid, business_img_path, business_location, business_category,
		board_business_title, board_business_content, board_business_register_date, board_business_update_date, board_business_status
        from tbl_business b join tbl_board_business bb on b.business_id = bb.business_id
        and board_business_id = #{boardBusinessId}
    </select>

    <select id="selectBoardImages" resultType="boardBusinessDTO">
        SELECT  tbb.board_business_id, tbbi.board_business_img_id, tbbi.board_business_id, tbbi.board_business_img_original_name,
                tbbi.board_business_img_uuid, tbbi.board_business_img_path, tbb.board_business_title, tbb.board_business_content,
                tbb.board_business_register_date, tbb.board_business_update_date, tbb.board_business_status
        FROM tbl_board_business_img tbbi JOIN tbl_board_business tbb
        ON tbbi.board_business_id = tbb.board_business_id
        and tbb.board_business_id = #{boardBusinessId}
    </select>

    <select id="selectAll" resultType="boardBusinessDTO">
        select b.board_business_id, b.business_id, board_business_title, board_business_content,
        board_business_register_date, board_business_update_date, board_business_status,
        board_business_img_original_name, board_business_img_uuid, board_business_img_path, main,
        business_location, business_category,
        count(review_id) boardBusinessReviewCount, ifnull(avg(review_grade), 0) boardBusinessGradeAverage
        from tbl_board_business b join tbl_board_business_img f
        on b.board_business_id = f.board_business_id and f.main = 1 join tbl_business m
        on b.business_id = m.business_id
        <if test="category != '전체'.toString()">
            and business_category = #{category}
        </if>
        left outer join tbl_business_review r
        on b.board_business_id = r.board_business_id
        group by b.board_business_id, b.business_id, board_business_title, board_business_content,
        board_business_register_date, board_business_update_date, board_business_status,
        board_business_img_original_name, board_business_img_uuid, board_business_img_path, main,
        business_location, business_category
        order by
        <choose>
            <when test="sort == 'recent'.toString()">
                b.board_business_id
            </when>
            <otherwise>
                boardBusinessGradeAverage
            </otherwise>
        </choose>
         desc
        limit #{cri.startRow}, #{cri.amount}
    </select>

    <insert id="insert">
        insert into tbl_board_business
        (business_id, board_business_title, board_business_content)
        values(#{businessId}, #{boardBusinessTitle}, #{boardBusinessContent});
    </insert>

    <select id="selectSequence" resultType="long">
        select last_insert_id() from tbl_board_business limit 0, 1
    </select>
</mapper>